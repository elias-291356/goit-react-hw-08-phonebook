{"version":3,"file":"static/js/876.162ba735.chunk.js","mappings":"+NA6CA,EAzCoB,WAClB,IAAMA,GAAWC,EAAAA,EAAAA,MAUjB,OACE,4BACE,eAAIC,UAAU,aAAd,0BACA,kBAAMA,UAAU,QAAQC,SAZP,SAAAC,GACnBA,EAAMC,iBACN,IAAMC,EAAeF,EAAMG,cAAcC,SACnCC,EAAOH,EAAaI,YAAYC,MAChCC,EAASN,EAAaO,cAAcF,MAE1CX,GAASc,EAAAA,EAAAA,IAAW,CAAEL,KAAAA,EAAMG,OAAAA,KAC5BR,EAAMG,cAAcQ,OACrB,EAIG,WACE,8BACE,iBAAMb,UAAU,aAAhB,oBACA,kBACEA,UAAU,QACVc,KAAK,OACLC,UAAQ,EACRC,UAAW,EACXT,KAAK,oBAGT,8BACE,iBAAMP,UAAU,aAAhB,sBACA,kBACEA,UAAU,QACVc,KAAK,OACLC,UAAQ,EACRC,UAAW,EACXT,KAAK,sBAGT,mBAAQP,UAAU,6BAAlB,8BAIP,E,oBCMD,EC7CyB,SAAAiB,GASvB,OARyB,SAAAC,GAEvB,OADiBC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,KAAKC,QAAf,KAEhC,SAACL,GAAD,UAAmBC,KAEnB,SAAC,KAAD,CAAUK,GAAI,SAAUC,SAAS,GAEpC,CAEF,CDmCD,EA3CiB,WACf,IAAMC,GAAW1B,EAAAA,EAAAA,MACXuB,GAAWH,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,KAAKC,QAAf,IAC5BI,GAAWP,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMO,UAAUD,QAApB,IAE5BE,GAAQT,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMO,UAAUC,KAApB,KAC/BC,EAAAA,EAAAA,YAAU,WACHP,GACLG,GAASK,EAAAA,EAAAA,MACV,GAAE,CAACL,EAAUH,IACd,IAAMS,EAAeC,MAAMC,QAAQP,IAAaA,EAASQ,OAAS,EAC5DC,EACJH,MAAMC,QAAQP,IAAiC,IAApBA,EAASQ,OAKtC,OACE,4BACE,sCACA,SAAC,EAAD,IACCN,IAAS,uBAAIA,KACd,wBACGG,GACCL,EAASU,KAAI,SAAAC,GACX,OACE,2BACE,wBAAKA,EAAQ9B,QACb,yBACG8B,EAAQ3B,OAAQ,KACjB,mBAAQ4B,QAAS,kBAhBLC,EAgB+BF,EAAQG,QAfjEf,GAASgB,EAAAA,EAAAA,IAAcF,IADG,IAAAA,CAgBK,EAAjB,uBAJKF,EAAQG,GAUpB,MAEJL,IAA4B,8DAGlC,G","sources":["components/AddContacts.jsx","components/pages/Contacts.jsx","HOC/withAuthRedirect.jsx"],"sourcesContent":["import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contactsReducer';\n\nconst AddContacts = () => {\n  const dispatch = useDispatch();\n  const handleSubmit = event => {\n    event.preventDefault();\n    const formChildren = event.currentTarget.elements;\n    const name = formChildren.contactName.value;\n    const number = formChildren.contactNumber.value;\n\n    dispatch(addContact({ name, number }));\n    event.currentTarget.reset();\n  };\n  return (\n    <div>\n      <h2 className=\"title is-3\">Add contact</h2>\n      <form className=\"field\" onSubmit={handleSubmit}>\n        <label>\n          <span className=\"title is-6\">Name:</span>\n          <input\n            className=\"label\"\n            type=\"text\"\n            required\n            minLength={3}\n            name=\"contactName\"\n          />\n        </label>\n        <label>\n          <span className=\"title is-6\">Number:</span>\n          <input\n            className=\"label\"\n            type=\"text\"\n            required\n            minLength={3}\n            name=\"contactNumber\"\n          />\n        </label>\n        <button className=\"button is-success is-light\">Add contact</button>\n      </form>\n    </div>\n  );\n};\n\nexport default AddContacts;\n","import AddContacts from 'components/AddContacts';\nimport withAuthRedirect from 'HOC/withAuthRedirect';\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact, fetchContactsThunk } from 'redux/contactsReducer';\n\nconst Contacts = () => {\n  const disptach = useDispatch();\n  const userData = useSelector(state => state.user.userData);\n  const contacts = useSelector(state => state.phonebook.contacts);\n  // const isLoading = useSelector(state => state.phonebook.isLoading);\n  const error = useSelector(state => state.phonebook.error);\n  useEffect(() => {\n    if (!userData) return;\n    disptach(fetchContactsThunk());\n  }, [disptach, userData]);\n  const showContacts = Array.isArray(contacts) && contacts.length > 0;\n  const showEmptyContactsMessage =\n    Array.isArray(contacts) && contacts.length === 0;\n\n  const handleDeleteContact = contactId => {\n    disptach(deleteContact(contactId));\n  };\n  return (\n    <div>\n      <h1>contacts</h1>\n      <AddContacts />\n      {error && <p>{error}</p>}\n      <ul>\n        {showContacts &&\n          contacts.map(contact => {\n            return (\n              <li key={contact.id}>\n                <h3>{contact.name}</h3>\n                <p>\n                  {contact.number}{' '}\n                  <button onClick={() => handleDeleteContact(contact.id)}>\n                    &times;\n                  </button>\n                </p>\n              </li>\n            );\n          })}\n      </ul>\n      {showEmptyContactsMessage && <h2>Theare no contacts in your list</h2>}\n    </div>\n  );\n};\n\nexport default withAuthRedirect(Contacts);\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\n\nconst withAuthRedirect = SomeComponent => {\n  const PrivateComponent = props => {\n    const userData = useSelector(state => state.user.userData);\n    return userData ? (\n      <SomeComponent {...props} />\n    ) : (\n      <Navigate to={'/login'} replace={true} />\n    );\n  };\n  return PrivateComponent;\n};\n\nexport default withAuthRedirect;\n"],"names":["dispatch","useDispatch","className","onSubmit","event","preventDefault","formChildren","currentTarget","elements","name","contactName","value","number","contactNumber","addContact","reset","type","required","minLength","SomeComponent","props","useSelector","state","user","userData","to","replace","disptach","contacts","phonebook","error","useEffect","fetchContactsThunk","showContacts","Array","isArray","length","showEmptyContactsMessage","map","contact","onClick","contactId","id","deleteContact"],"sourceRoot":""}