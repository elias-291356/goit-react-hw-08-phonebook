{"version":3,"file":"static/js/653.d93800dc.chunk.js","mappings":"+NAiCA,EA7BoB,WAClB,IAAMA,GAAWC,EAAAA,EAAAA,MAUjB,OACE,4BACE,yCACA,kBAAMC,SAZW,SAAAC,GACnBA,EAAMC,iBACN,IAAMC,EAAeF,EAAMG,cAAcC,SACnCC,EAAOH,EAAaI,YAAYC,MAChCC,EAASN,EAAaO,cAAcF,MAE1CV,GAASa,EAAAA,EAAAA,IAAW,CAAEL,KAAAA,EAAMG,OAAAA,KAC5BR,EAAMG,cAAcQ,OACrB,EAIG,WACE,8BACE,qCACA,kBAAOC,KAAK,OAAOC,UAAQ,EAACC,UAAW,EAAGT,KAAK,oBAEjD,8BACE,uCACA,kBAAOO,KAAK,OAAOC,UAAQ,EAACC,UAAW,EAAGT,KAAK,sBAEjD,iDAIP,ECiBD,EA3CiB,WACf,IAAMU,GAAWjB,EAAAA,EAAAA,MACXkB,GAAWC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,KAAKH,QAAf,IAC5BI,GAAWH,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMG,UAAUD,QAApB,IAE5BE,GAAQL,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMG,UAAUC,KAApB,KAC/BC,EAAAA,EAAAA,YAAU,WACHP,GACLD,GAASS,EAAAA,EAAAA,MACV,GAAE,CAACT,EAAUC,IACd,IAAMS,EAAeC,MAAMC,QAAQP,IAAaA,EAASQ,OAAS,EAC5DC,EACJH,MAAMC,QAAQP,IAAiC,IAApBA,EAASQ,OAKtC,OACE,4BACE,sCACA,SAAC,EAAD,IACCN,IAAS,uBAAIA,KACd,wBACGG,GACCL,EAASU,KAAI,SAAAC,GACX,OACE,2BACE,wBAAKA,EAAQ1B,QACb,yBACG0B,EAAQvB,OAAQ,KACjB,mBAAQwB,QAAS,kBAhBLC,EAgB+BF,EAAQG,QAfjEnB,GAASoB,EAAAA,EAAAA,IAAcF,IADG,IAAAA,CAgBK,EAAjB,uBAJKF,EAAQG,GAUpB,MAEJL,IAA4B,8DAGlC,C","sources":["components/AddContacts.jsx","components/pages/Contacts.jsx"],"sourcesContent":["import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contactsReducer';\n\nconst AddContacts = () => {\n  const dispatch = useDispatch();\n  const handleSubmit = event => {\n    event.preventDefault();\n    const formChildren = event.currentTarget.elements;\n    const name = formChildren.contactName.value;\n    const number = formChildren.contactNumber.value;\n\n    dispatch(addContact({ name, number }));\n    event.currentTarget.reset();\n  };\n  return (\n    <div>\n      <h2>Add contact</h2>\n      <form onSubmit={handleSubmit}>\n        <label>\n          <span>Name:</span>\n          <input type=\"text\" required minLength={3} name=\"contactName\" />\n        </label>\n        <label>\n          <span>Number:</span>\n          <input type=\"text\" required minLength={3} name=\"contactNumber\" />\n        </label>\n        <button>Add contact</button>\n      </form>\n    </div>\n  );\n};\n\nexport default AddContacts;\n","import AddContacts from 'components/AddContacts';\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact, fetchContactsThunk } from 'redux/contactsReducer';\n\nconst Contacts = () => {\n  const disptach = useDispatch();\n  const userData = useSelector(state => state.user.userData);\n  const contacts = useSelector(state => state.phonebook.contacts);\n  // const isLoading = useSelector(state => state.phonebook.isLoading);\n  const error = useSelector(state => state.phonebook.error);\n  useEffect(() => {\n    if (!userData) return;\n    disptach(fetchContactsThunk());\n  }, [disptach, userData]);\n  const showContacts = Array.isArray(contacts) && contacts.length > 0;\n  const showEmptyContactsMessage =\n    Array.isArray(contacts) && contacts.length === 0;\n\n  const handleDeleteContact = contactId => {\n    disptach(deleteContact(contactId));\n  };\n  return (\n    <div>\n      <h1>contacts</h1>\n      <AddContacts />\n      {error && <p>{error}</p>}\n      <ul>\n        {showContacts &&\n          contacts.map(contact => {\n            return (\n              <li key={contact.id}>\n                <h3>{contact.name}</h3>\n                <p>\n                  {contact.number}{' '}\n                  <button onClick={() => handleDeleteContact(contact.id)}>\n                    &times;\n                  </button>\n                </p>\n              </li>\n            );\n          })}\n      </ul>\n      {showEmptyContactsMessage && <h2>Theare no contacts in your list</h2>}\n    </div>\n  );\n};\n\nexport default Contacts;\n"],"names":["dispatch","useDispatch","onSubmit","event","preventDefault","formChildren","currentTarget","elements","name","contactName","value","number","contactNumber","addContact","reset","type","required","minLength","disptach","userData","useSelector","state","user","contacts","phonebook","error","useEffect","fetchContactsThunk","showContacts","Array","isArray","length","showEmptyContactsMessage","map","contact","onClick","contactId","id","deleteContact"],"sourceRoot":""}